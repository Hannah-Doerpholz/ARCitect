"use strict";
var electron = require("electron");
function exposeInMainWorld(key, api) {
  return electron.contextBridge.exposeInMainWorld(key, api);
}
const versions = process.versions;
exposeInMainWorld("versions", versions);
exposeInMainWorld(
  "ipc",
  {
    send: (channel, args) => {
      electron.ipcRenderer.send(channel, args);
    },
    on: (channel, listener) => {
      electron.ipcRenderer.on(channel, (event, ...args) => listener(...args));
    },
    off: (channel, listener) => {
      electron.ipcRenderer.removeListener(channel, (event, ...args) => listener(...args));
    },
    invoke: (channel, args) => {
      return electron.ipcRenderer.invoke(channel, args);
    }
  }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguY2pzIiwic291cmNlcyI6WyIuLi9zcmMvZXhwb3NlSW5NYWluV29ybGQudHMiLCIuLi9zcmMvdmVyc2lvbnMudHMiLCIuLi9zcmMvaXBjLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y29udGV4dEJyaWRnZX0gZnJvbSAnZWxlY3Ryb24nO1xuXG4vKipcbiAqIFR5cGVzYWZlIHdyYXBwZXIgZm9yIGBlbGVjdHJvbi5jb250ZXh0QnJpZGdlLmV4cG9zZUluTWFpbldvcmxkYC5cbiAqIEd1YXJhbnRlZXMgdGhhdCBhbGwgZXhwb3NlZCBBUElzIHdpbGwgY29tcGx5IHdpdGggY29udHJhY3RzLlxuICogQHBhcmFtIGtleSBUaGUga2V5IHRvIGluamVjdCB0aGUgQVBJIG9udG8gd2luZG93IHdpdGguIFRoZSBBUEkgd2lsbCBiZSBhY2Nlc3NpYmxlIG9uIHdpbmRvd1thcGlLZXldLlxuICogQHBhcmFtIGFwaSBZb3VyIEFQSVxuICpcbiAqIEBzZWUgaHR0cHM6Ly93d3cuZWxlY3Ryb25qcy5vcmcvZG9jcy9sYXRlc3QvYXBpL2NvbnRleHQtYnJpZGdlI2NvbnRleHRicmlkZ2VleHBvc2Vpbm1haW53b3JsZGFwaWtleS1hcGlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9zZUluTWFpbldvcmxkPFQgZXh0ZW5kcyBrZXlvZiBFeHBvc2VkICYgc3RyaW5nPihrZXk6IFQsIGFwaTogRXhwb3NlZFtUXSkge1xuICByZXR1cm4gY29udGV4dEJyaWRnZS5leHBvc2VJbk1haW5Xb3JsZChrZXksIGFwaSk7XG59XG4iLCJpbXBvcnQge2V4cG9zZUluTWFpbldvcmxkfSBmcm9tICcuL2V4cG9zZUluTWFpbldvcmxkJztcblxuLy8gRXhwb3J0IGZvciB0eXBlcyBpbiBjb250cmFjdHMuZC50c1xuZXhwb3J0IGNvbnN0IHZlcnNpb25zID0gcHJvY2Vzcy52ZXJzaW9ucztcblxuZXhwb3NlSW5NYWluV29ybGQoJ3ZlcnNpb25zJywgdmVyc2lvbnMpO1xuIiwiaW1wb3J0IHsgaXBjUmVuZGVyZXIgfSBmcm9tICdlbGVjdHJvbic7XG5pbXBvcnQgeyBleHBvc2VJbk1haW5Xb3JsZCB9IGZyb20gJy4vZXhwb3NlSW5NYWluV29ybGQnO1xuXG5leHBvc2VJbk1haW5Xb3JsZChcbiAgLy8gQWxsb3dlZCAnaXBjUmVuZGVyZXInIG1ldGhvZHMuXG4gICdpcGMnLCB7XG4gICAgICAvLyBGcm9tIHJlbmRlciB0byBtYWluLlxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgIHNlbmQ6IChjaGFubmVsOiBzdHJpbmcsIGFyZ3M6IGFueVtdKSA9PiB7XG4gICAgICAgIGlwY1JlbmRlcmVyLnNlbmQoY2hhbm5lbCwgYXJncyk7XG4gICAgICB9LFxuICAgICAgLy8gRnJvbSBtYWluIHRvIHJlbmRlci5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXR5cGVzXG4gICAgICBvbjogKGNoYW5uZWw6IHN0cmluZywgbGlzdGVuZXI6IEZ1bmN0aW9uKSA9PiB7XG4gICAgICAgIGlwY1JlbmRlcmVyLm9uKGNoYW5uZWwsIChldmVudCwgLi4uYXJncykgPT4gbGlzdGVuZXIoLi4uYXJncykpO1xuICAgICAgfSxcbiAgICAgIG9mZjogKGNoYW5uZWw6IHN0cmluZywgbGlzdGVuZXI6IEZ1bmN0aW9uKSA9PiB7XG4gICAgICAgIGlwY1JlbmRlcmVyLnJlbW92ZUxpc3RlbmVyKGNoYW5uZWwsIChldmVudCwgLi4uYXJncykgPT4gbGlzdGVuZXIoLi4uYXJncykpO1xuICAgICAgfSxcbiAgICAgIC8vIEZyb20gcmVuZGVyIHRvIG1haW4gYW5kIGJhY2sgYWdhaW4uXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgaW52b2tlOiAoY2hhbm5lbDogc3RyaW5nLCBhcmdzOiBhbnlbXSkgPT4ge1xuICAgICAgICByZXR1cm4gaXBjUmVuZGVyZXIuaW52b2tlKGNoYW5uZWwsIGFyZ3MpO1xuICAgIH0sXG4gIH0sXG4pO1xuIl0sIm5hbWVzIjpbImNvbnRleHRCcmlkZ2UiLCJpcGNSZW5kZXJlciJdLCJtYXBwaW5ncyI6Ijs7QUFVZ0IsU0FBQSxrQkFBb0QsS0FBUSxLQUFpQjtBQUNwRixTQUFBQSx1QkFBYyxrQkFBa0IsS0FBSyxHQUFHO0FBQ2pEO0FDVE8sTUFBTSxXQUFXLFFBQVE7QUFFaEMsa0JBQWtCLFlBQVksUUFBUTtBQ0Z0QztBQUFBLEVBRUU7QUFBQSxFQUFPO0FBQUEsSUFHSCxNQUFNLENBQUMsU0FBaUIsU0FBZ0I7QUFDMUJDLGVBQUFBLFlBQUEsS0FBSyxTQUFTLElBQUk7QUFBQSxJQUNoQztBQUFBLElBR0EsSUFBSSxDQUFDLFNBQWlCLGFBQXVCO0FBQy9CQSwyQkFBQSxHQUFHLFNBQVMsQ0FBQyxVQUFVLFNBQVMsU0FBUyxHQUFHLElBQUksQ0FBQztBQUFBLElBQy9EO0FBQUEsSUFDQSxLQUFLLENBQUMsU0FBaUIsYUFBdUI7QUFDaENBLDJCQUFBLGVBQWUsU0FBUyxDQUFDLFVBQVUsU0FBUyxTQUFTLEdBQUcsSUFBSSxDQUFDO0FBQUEsSUFDM0U7QUFBQSxJQUdBLFFBQVEsQ0FBQyxTQUFpQixTQUFnQjtBQUNqQyxhQUFBQSxxQkFBWSxPQUFPLFNBQVMsSUFBSTtBQUFBLElBQzNDO0FBQUEsRUFDRjtBQUNGOyJ9
